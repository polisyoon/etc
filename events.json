{
    "content": "import pymysql\nimport requests\nimport sys\nimport os\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n# print load_dotenv()\nprint (os.getenv('DB_HOST'))\n\n\n# Connect to the database\ncnx = pymysql.connect(\n    host=os.getenv('DB_HOST'),\n    user=os.getenv('DB_USER'),\n    passwd=os.getenv('DB_PASSWD'),\n    db=os.getenv('DB_NAME'),\n    cursorclass=pymysql.cursors.DictCursor,\n    use_unicode=True,\n    charset=os.getenv('DB_CHARSET')\n)\ncursor = cnx.cursor()\n\nquerySelect = \"SELECT * FROM seasons where year =2024\"\ncursor.execute(querySelect)\nresult = cursor.fetchall()\n\nfor row in result:\n    season_id = row['id']\n    year = row['year']\n    url = f\"https://api.motogp.pulselive.com/motogp/v1/results/events?seasonUuid={season_id}&isFinished=true\"\n    print(url)\n    response = requests.get(url)\n    events = response.json()\n\n    for event in events:\n        try:\n            insert_event_query = \"\"\"\n                INSERT INTO events (id, country_iso, country_name, country_region_iso, \n                                event_circuit_information_url, event_circuit_information_menu_position, \n                                event_podiums_url, event_podiums_menu_position, \n                                event_pole_positions_url, event_pole_positions_menu_position, \n                                event_nations_statistics_url, event_nations_statistics_menu_position, \n                                event_riders_all_time_url, event_riders_all_time_menu_position, \n                                circuit_id, circuit_name, circuit_legacy_id, \n                                circuit_place, circuit_nation, test, sponsored_name, \n                                date_end, toad_api_uuid, date_start, name, \n                                season_id, year, season_current, short_name) \n                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)\n            \"\"\"\n            cursor.execute(insert_event_query, (\n                event['id'], event['country']['iso'], event['country']['name'], event['country']['region_iso'],\n                event['event_files']['circuit_information']['url'],\n                event['event_files']['circuit_information']['menu_position'],\n                event['event_files']['podiums']['url'], event['event_files']['podiums']['menu_position'],\n                event['event_files']['pole_positions']['url'], event['event_files']['pole_positions']['menu_position'],\n                event['event_files']['nations_statistics']['url'],\n                event['event_files']['nations_statistics']['menu_position'],\n                event['event_files']['riders_all_time']['url'], event['event_files']['riders_all_time']['menu_position'],\n                event['circuit']['id'], event['circuit']['name'], event['circuit']['legacy_id'],\n                event['circuit']['place'], event['circuit']['nation'], event['test'], event['sponsored_name'],\n                event['date_end'], event['toad_api_uuid'], event['date_start'], event['name'],\n                event['season']['id'], event['season']['year'], event['season']['current'], event['short_name']\n            ))\n\n            # Inserting legacy IDs\n            for legacy in event['legacy_id']:\n                insert_legacy_query = \"\"\"\n                    INSERT INTO event_legacy_ids (event_id, categoryId, eventId) \n                    VALUES (%s, %s, %s)\n                \"\"\"\n                cursor.execute(insert_legacy_query, (event['id'], legacy['categoryId'], legacy['eventId']))\n        except Exception as e:\n            print(e)\n            continue\n    cnx.commit()\n\ncursor.close()\ncnx.close()\n"
}