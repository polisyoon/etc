{
    "content": "import pymysql\nimport hashlib\nimport requests\nimport sys\nimport os\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n# Connect to the database\ncnx = pymysql.connect(\n    host=os.getenv('DB_HOST'),\n    user=os.getenv('DB_USER'),\n    passwd=os.getenv('DB_PASSWD'),\n    db=os.getenv('DB_NAME'),\n    cursorclass=pymysql.cursors.DictCursor,\n    use_unicode=True,\n    charset=os.getenv('DB_CHARSET')\n)\n\ncursor = cnx.cursor()\n\nquerySelect = \"SELECT * FROM racingmike_motogp.categories_by_season\"\ncursor.execute(querySelect)\nresult = cursor.fetchall()\nprint(result)\nfor row in result:\n    category_id = row['id']\n    name = row['name']\n    year = row['year']\n    print(\"RUNNING YEAR \"+str(year))\n    #url = \"https://api.motogp.com/riders-api/season/\" + str(year) + \"/teams?category=\" + str(category_id)\n    url = \"https://api.motogp.pulselive.com/motogp/v1/teams?categoryUuid=\"+ str(category_id)+\"&seasonYear=\"+str(year)\n    print(url)\n    response = requests.get(url)\n    data = response.json()\n    for team in data:\n        for rider in team['riders']:\n            team_id = None\n            if rider.get('current_career_step') and rider['current_career_step'].get('team'):\n                team_id = rider['current_career_step']['team'].get('id')\n            values = (\n                team['id'],\n                team['name'],\n                team['legacy_id'],\n                team['color'],\n                team['text_color'],\n                team['picture'],\n                team['constructor']['id'],\n                team['constructor']['name'],\n                team['constructor']['legacy_id'],\n                rider['id'],\n                rider['name'],\n                rider['surname'],\n                rider['nickname'],\n                rider['current_career_step']['season'],\n                rider['current_career_step']['number'],\n                rider['current_career_step']['sponsored_team'],\n                #rider['current_career_step']['team']['id'],\n                team_id,\n                rider['current_career_step']['category']['id'],\n                rider['current_career_step']['category']['name'],\n                rider['current_career_step']['category']['legacy_id'],\n                rider['current_career_step']['in_grid'],\n                rider['current_career_step']['short_nickname'],\n                rider['current_career_step']['current'],\n                rider['current_career_step']['pictures']['profile']['main'],\n                rider['current_career_step']['pictures']['bike']['main'],\n                rider['current_career_step']['pictures']['helmet']['main'],\n                rider['current_career_step']['pictures']['number'],\n                rider['current_career_step']['pictures']['portrait'],\n                rider['current_career_step']['type'],\n                rider['country']['iso'],\n                rider['country']['name'],\n                rider['country']['flag'],\n                rider['birth_city'],\n                rider['birth_date'],\n                rider['years_old'],\n                rider['published'],\n                rider['legacy_id'],\n                year\n            )\n\n            # Create a string representation of the entry\n            entry_str = ''.join(map(str, (\n                year,rider['legacy_id']\n            )))\n\n            # Generate the MD5 hash\n            md5_hash = hashlib.md5(entry_str.encode()).hexdigest()\n\n            # Extend your insertion values and query to include the MD5 hash\n            values += (md5_hash,)\n            try:\n                insert_query = \"INSERT INTO TeamRiders VALUES (%s,%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)\"\n                cursor.execute(insert_query, values)\n            except Exception as e:\n                print(e)\n                print(values)\n                print(insert_query)\n                continue\n        cnx.commit()\n\ncursor.close()\ncnx.close()\n\n"
}