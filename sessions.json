{
    "content": "import pymysql\nimport hashlib\nimport requests\nimport json\nimport sys\nimport os\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n# Connect to the database\ncnx = pymysql.connect(\n    host=os.getenv('DB_HOST'),\n    user=os.getenv('DB_USER'),\n    passwd=os.getenv('DB_PASSWD'),\n    db=os.getenv('DB_NAME'),\n    cursorclass=pymysql.cursors.DictCursor,\n    use_unicode=True,\n    charset=os.getenv('DB_CHARSET')\n)\n\ncursor = cnx.cursor()\n\n#querySelect = \"SELECT * FROM events\"\nquerySelect = \"SELECT * FROM racingmike_motogp.events WHERE year = '2024' AND test != 1 AND date_start BETWEEN CURDATE() - INTERVAL 10 DAY AND CURDATE() ORDER BY date_start DESC;\"\ncursor.execute(querySelect)\nresult = cursor.fetchall()\nprint(result)\nfor row in result:\n    event_id = row['id']\n    year = row['year']\n    print(\"RUNNING YEAR \"+str(year))\n    querySelect3 = \"SELECT * FROM racingmike_motogp.categories_general WHERE year = \"+str(year)\n    #querySelect3 = \"SELECT * FROM sessions where year = 2024 AND date BETWEEN CURDATE() - INTERVAL 40 DAY AND CURDATE() ORDER BY date DESC\"\n    print(querySelect3)\n    cursor.execute(querySelect3)\n    result = cursor.fetchall()\n    #print(result)\n    for row in result:\n        category_id = row['id']\n        name = row['name']\n        year = row['year']\n        url = \"https://api.motogp.pulselive.com/motogp/v1/results/sessions?eventUuid=\"+str(event_id)+\"&categoryUuid=\"+str(category_id)\n        print(url)\n        print(\"***********************************\")\n        response = requests.get(url)\n        if response.status_code == 200:\n            data = response.json()\n            print(data)\n            # Assuming the JSON response is a list\n            for session in data:\n                # Constructing the INSERT query using the fetched data\n                print(type(session['session_files']))  # This should show <class 'dict'> if it's correctly structured\n                print(session['session_files'])  # This will show the actual content\n                insert_query = \"\"\"\n                INSERT INTO sessions (\n                    id, date, number, track_condition, air_condition, humidity_condition, ground_condition,\n                    weather_condition, circuit_name, classification_url, classification_menu_position,\n                    analysis_url, analysis_menu_position, average_speed_url, average_speed_menu_position,\n                    fast_lap_sequence_url, fast_lap_sequence_menu_position, lap_chart_url, lap_chart_menu_position,\n                    analysis_by_lap_url, analysis_by_lap_menu_position, fast_lap_rider_url, fast_lap_rider_menu_position,\n                    grid_url, grid_menu_position, session_url, session_menu_position, world_standing_url,\n                    world_standing_menu_position, best_partial_time_url, best_partial_time_menu_position,\n                    maximum_speed_url, maximum_speed_menu_position, combined_practice_url, combined_practice_menu_position,\n                    combined_classification_url, combined_classification_menu_position, type, category_id,\n                    category_legacy_id, category_name, event_id, event_name, event_sponsored_name, year,\n                    circuit_id, circuit_legacy_id, circuit_place, circuit_nation, country_iso, country_name,\n                    country_region_iso, event_short_name, status\n                ) VALUES (\n                    %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,\n                    %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,\n                    %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s\n                );\n                \"\"\"\n\n                values = (\n                    session['id'],\n                    session['date'],\n                    session['number'],\n                    session['condition']['track'],\n                    session['condition']['air'],\n                    session['condition']['humidity'],\n                    session['condition']['ground'],\n                    session['condition']['weather'],\n                    session['circuit'],\n                    session['session_files']['classification']['url'],\n                    #session['session_files']['classification'],\n                    session['session_files']['classification']['menu_position'],\n                    session['session_files']['analysis']['url'],\n                    #session['session_files']['analysis'],\n                    \n                    session['session_files']['analysis']['menu_position'],\n                    session['session_files']['average_speed']['url'],\n                    session['session_files']['average_speed']['menu_position'],\n                    session['session_files']['fast_lap_sequence']['url'],\n                    session['session_files']['fast_lap_sequence']['menu_position'],\n                    session['session_files']['lap_chart']['url'],\n                    session['session_files']['lap_chart']['menu_position'],\n                    session['session_files']['analysis_by_lap']['url'],\n                    session['session_files']['analysis_by_lap']['menu_position'],\n                    session['session_files']['fast_lap_rider']['url'],\n                    session['session_files']['fast_lap_rider']['menu_position'],\n                    session['session_files']['grid']['url'],\n                    session['session_files']['grid']['menu_position'],\n                    session['session_files']['session']['url'],\n                    session['session_files']['session']['menu_position'],\n                    session['session_files']['world_standing']['url'],\n                    session['session_files']['world_standing']['menu_position'],\n                    session['session_files']['best_partial_time']['url'],\n                    session['session_files']['best_partial_time']['menu_position'],\n                    session['session_files']['maximum_speed']['url'],\n                    session['session_files']['maximum_speed']['menu_position'],\n                    session['session_files']['combined_practice']['url'],\n                    session['session_files']['combined_practice']['menu_position'],\n                    session['session_files']['combined_classification']['url'],\n                    session['session_files']['combined_classification']['menu_position'],\n                    session['type'],\n                    session['category']['id'],\n                    session['category']['legacy_id'],\n                    session['category']['name'],\n                    session['event']['id'],\n                    session['event']['name'],\n                    session['event']['sponsored_name'],\n                    session['event']['season'],\n                    session['event']['circuit']['id'],\n                    session['event']['circuit']['legacy_id'],\n                    session['event']['circuit']['place'],\n                    session['event']['circuit']['nation'],\n                    session['event']['country']['iso'],\n                    session['event']['country']['name'],\n                    session['event']['country']['region_iso'],\n                    session['event']['short_name'],\n                    session['status']\n                )\n\n                #if insert_query.count('%s') != len(values):\n                #    print(\"Mismatch detected!\")\n                #    print(f\"Placeholders: {insert_query.count('%s')}, Values: {len(values)}\")\n                #    continue  # Skip this iteration to avoid the error\n\n                try:\n                    cursor.execute(insert_query, values)\n                    cnx.commit()\n                except Exception as e:\n                    print(\"Error:\", e)\n                    continue\n            #    #print(\"Query:\", insert_query)\n            #    #print(\"Values:\", values)\n            #    #sys.exit(0)\n        else:\n            print(f\"Failed to fetch data from {url}\")\n\n        print(\"***********************************\")\n\n    # Don't forget to commit and close your connection after all operations.\n#cnx.commit()\ncursor.close()\ncnx.close()\n\n"
}